{"ast":null,"code":"var _jsxFileName = \"/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/Signup/index.js\",\n    _s = $RefreshSig$();\n\nimport { fb } from 'service';\nimport { Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FormField } from 'components/FormField';\nimport { defaultValues, validationSchema } from './formikConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  _s();\n\n  const history = useHistory();\n  const [serverError, setServerError] = useState('');\n\n  const signup = ({\n    email,\n    userName,\n    password\n  }, {\n    setSubmitting\n  }) => {\n    fb.auth.createUserWithEmailAndPassword(email, password).then(res => {\n      var _res$user;\n\n      if (res === null || res === void 0 ? void 0 : (_res$user = res.user) === null || _res$user === void 0 ? void 0 : _res$user.uid) {\n        fetch('/api/createUser', {\n          method: 'POST',\n          body: JSON.stringify({\n            userName,\n            userId: res.user.uid\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(() => {\n          fb.firestore.collection('chatUsers').doc(res.user.uid).set({\n            userName,\n            avatar: ''\n          });\n        });\n      } else {\n        setServerError(\"We're having trouble signing you up. Please try again.\");\n      }\n    }).catch(err => {\n      if (err.code === 'auth/email-already-in-use') {\n        setServerError('An account with this email already exists');\n      } else {\n        setServerError(\"We're having trouble signing you up. Please try again.\");\n      }\n    }).finally(() => setSubmitting(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      style: {\n        marginTop: \"205px\"\n      },\n      children: \"let us chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        onSubmit: signup,\n        validateOnMount: true,\n        initialValues: defaultValues,\n        validationSchema: validationSchema,\n        children: ({\n          isValid,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormField, {\n            name: \"userName\",\n            label: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            name: \"email\",\n            label: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            name: \"password\",\n            label: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            type: \"password\",\n            name: \"verifyPassword\",\n            label: \"verify password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-link-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-link\",\n              onClick: () => history.push('login'),\n              children: \"have an account already? log in here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"#B22222\"\n            },\n            className: \"btn btn-warning\",\n            disabled: isSubmitting || !isValid,\n            type: \"submit\",\n            children: \"signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: serverError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"gImVZM9eszjceQm/ycQBpQtwQPM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/Signup/index.js"],"names":["fb","Form","Formik","React","useState","useHistory","FormField","defaultValues","validationSchema","Signup","history","serverError","setServerError","signup","email","userName","password","setSubmitting","auth","createUserWithEmailAndPassword","then","res","user","uid","fetch","method","body","JSON","stringify","userId","headers","firestore","collection","doc","set","avatar","catch","err","code","finally","marginTop","isValid","isSubmitting","push","backgroundColor"],"mappings":"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","sourcesContent":["import { fb } from 'service';\nimport { Form, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FormField } from 'components/FormField';\nimport { defaultValues, validationSchema } from './formikConfig';\n\nexport const Signup = () => {\n  const history = useHistory();\n  const [serverError, setServerError] = useState('');\n\n  const signup = ({ email, userName, password }, { setSubmitting }) => {\n    fb.auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(res => {\n        if (res?.user?.uid) {\n          fetch('/api/createUser', {\n            method: 'POST',\n            body: JSON.stringify({\n              userName,\n              userId: res.user.uid,\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          }).then(() => {\n            fb.firestore\n              .collection('chatUsers')\n              .doc(res.user.uid)\n              .set({ userName, avatar: '' });\n          });\n        } else {\n          setServerError(\n            \"We're having trouble signing you up. Please try again.\",\n          );\n        }\n      })\n      .catch(err => {\n        if (err.code === 'auth/email-already-in-use') {\n          setServerError('An account with this email already exists');\n        } else {\n          setServerError(\n            \"We're having trouble signing you up. Please try again.\",\n          );\n        }\n      })\n      .finally(() => setSubmitting(false));\n  };\n\n  return (\n    <div>\n      <div className=\"title\" style={{ marginTop: \"205px\"}}>let us chat</div>\n    <div className=\"auth-form\">\n      <h1>sign up</h1>\n      <Formik\n        onSubmit={signup}\n        validateOnMount={true}\n        initialValues={defaultValues}\n        validationSchema={validationSchema}\n      >\n        {({ isValid, isSubmitting }) => (\n          <Form>\n            <FormField name=\"userName\" label=\"username\" />\n            <FormField name=\"email\" label=\"email\" type=\"email\" />\n            <FormField name=\"password\" label=\"password\" type=\"password\" />\n            <FormField\n              type=\"password\"\n              name=\"verifyPassword\"\n              label=\"verify password\"\n            />\n\n            <div className=\"auth-link-container\">\n             <span className=\"auth-link\" onClick={() => history.push('login')}>\n               have an account already? log in here\n              </span>\n            </div>\n\n            <button style={{backgroundColor: \"#B22222\" }} className=\"btn btn-warning\" disabled={isSubmitting || !isValid} type=\"submit\">\n              signup\n            </button>\n          </Form>\n        )}\n      </Formik>\n\n      {serverError && <div className=\"error\">{serverError}</div>}\n    </div>\n    </div>\n    \n  );\n};\n"]},"metadata":{},"sourceType":"module"}