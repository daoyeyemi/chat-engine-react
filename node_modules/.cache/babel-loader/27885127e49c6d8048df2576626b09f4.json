{"ast":null,"code":"var _jsxFileName = \"/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/ChatToolbar/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useChat } from 'context';\nimport { joinUsernames } from 'helpers';\nimport { Icon } from 'semantic-ui-react';\nimport { SearchUsers } from 'components/SearchUsers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChatToolbar = () => {\n  _s();\n\n  const {\n    selectedChat,\n    chatConfig\n  } = useChat();\n  const [searching, setSearching] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-text\",\n        children: joinUsernames(selectedChat.people, chatConfig.userName).slice(0, 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-user-icon\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          color: \"yellow\",\n          name: \"user plus\",\n          onClick: () => setSearching(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchUsers, {\n      closeFn: () => setSearching(false),\n      visible: searching\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatToolbar, \"kUO0PjAUHrwtSOfRPdUh/gueH9w=\", false, function () {\n  return [useChat];\n});\n\n_c = ChatToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatToolbar\");","map":{"version":3,"sources":["/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/ChatToolbar/index.js"],"names":["useState","useChat","joinUsernames","Icon","SearchUsers","ChatToolbar","selectedChat","chatConfig","searching","setSearching","people","userName","slice"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BN,OAAO,EAA5C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACGE,aAAa,CAACI,YAAY,CAACI,MAAd,EAAsBH,UAAU,CAACI,QAAjC,CAAb,CAAwDC,KAAxD,CACC,CADD,EAEC,GAFD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,KAAK,EAAC,QADR;AAEE,UAAA,IAAI,EAAC,WAFP;AAGE,UAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,IAAD;AAH7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,KAAD,CAAxC;AAAiD,MAAA,OAAO,EAAED;AAA1D;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAsBD,CA1BM;;GAAMH,W;UAC0BJ,O;;;KAD1BI,W","sourcesContent":["import { useState } from 'react';\nimport { useChat } from 'context';\nimport { joinUsernames } from 'helpers';\nimport { Icon } from 'semantic-ui-react';\nimport { SearchUsers } from 'components/SearchUsers';\n\nexport const ChatToolbar = () => {\n  const { selectedChat, chatConfig } = useChat();\n  const [searching, setSearching] = useState(false);\n\n  return (\n    <>\n      <div className=\"chat-toolbar\">\n        <div className=\"chat-header-text\">\n          {joinUsernames(selectedChat.people, chatConfig.userName).slice(\n            0,\n            100,\n          )}\n        </div>\n\n        <div className=\"add-user-icon\">\n          <Icon\n            color=\"yellow\"\n            name=\"user plus\"\n            onClick={() => setSearching(true)}\n          />\n        </div>\n      </div>\n\n      <SearchUsers closeFn={() => setSearching(false)} visible={searching} />\n    </>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}