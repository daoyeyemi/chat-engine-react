{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { fb } from '../service';\nexport const useAuth = () => {\n  _s();\n\n  const [authUser, setAuthUser] = useState();\n  useEffect(() => {\n    const unsubscribe = fb.auth.onAuthStateChanged(user => {\n      if (user) {\n        setAuthUser(user);\n      } else {\n        setAuthUser(null);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return {\n    authUser\n  };\n};\n\n_s(useAuth, \"3lzZrlpw6AXRzYhpt9UnPZ20mxE=\");\n\nexport const useResolved = (...vals) => {\n  _s2();\n\n  const [resolved, setResolved] = useState(false);\n  useEffect(() => {\n    setResolved(vals.every(v => v !== undefined));\n  }, [vals]); // if every value is not resolved return true\n\n  return resolved;\n};\n\n_s2(useResolved, \"yjVn3RfJ9e+Nqgqjx7kKE09tFDE=\");\n\nexport const useDebounce = (value, delay) => {\n  _s3();\n\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedValue(value), delay);\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n  return debouncedValue;\n};\n\n_s3(useDebounce, \"KDuPAtDOgxm8PU6legVJOb3oOmA=\");\n\nexport const useScrollToBottom = (trigger, className) => {\n  _s4();\n\n  // Scrolls to the bottom of a container with a \n  // given className when active is flipped to true\n  // Because we are dealing with images as well, we need to wait\n  // until the images have loaded fully before doing the scroll.\n  useEffect(() => {\n    if (!!trigger) {\n      Promise.all(Array.from(document.images).filter(img => !img.complete).map(img => new Promise(resolve => {\n        img.onload = img.onerror = resolve;\n      }))).then(() => {\n        document.getElementsByClassName(className)[0].scrollTop = document.getElementsByClassName(className)[0].scrollHeight;\n      });\n    }\n  }, [trigger, className]);\n};\n\n_s4(useScrollToBottom, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/hooks/index.js"],"names":["useState","useEffect","fb","useAuth","authUser","setAuthUser","unsubscribe","auth","onAuthStateChanged","user","useResolved","vals","resolved","setResolved","every","v","undefined","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useScrollToBottom","trigger","className","Promise","all","Array","from","document","images","filter","img","complete","map","resolve","onload","onerror","then","getElementsByClassName","scrollTop","scrollHeight"],"mappings":";;;;;AAAC,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,EAAT,QAAmB,YAAnB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,WAAW,GAAGJ,EAAE,CAACK,IAAH,CAAQC,kBAAR,CAA2BC,IAAI,IAAI;AACrD,UAAIA,IAAJ,EAAU;AACRJ,QAAAA,WAAW,CAACI,IAAD,CAAX;AACD,OAFD,MAEO;AACLJ,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KANmB,CAApB;AAOA,WAAOC,WAAP;AACD,GATQ,EASN,EATM,CAAT;AAWA,SAAO;AACLF,IAAAA;AADK,GAAP;AAGD,CAjBK;;GAAMD,O;;AAmBd,OAAO,MAAMO,WAAW,GAAG,CAAC,GAAGC,IAAJ,KAAa;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW,CAACF,IAAI,CAACG,KAAL,CAAWC,CAAC,IAAIA,CAAC,KAAKC,SAAtB,CAAD,CAAX;AACH,GAFQ,EAEN,CAACL,IAAD,CAFM,CAAT,CAHoC,CAOpC;;AACA,SAAOC,QAAP;AACC,CATE;;IAAMF,W;;AAWb,OAAO,MAAMO,WAAW,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAA;;AAC3C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAACkB,KAAD,CAApD;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,OAAO,GAAGC,UAAU,CAAC,MAAMF,iBAAiB,CAACH,KAAD,CAAxB,EAAiCC,KAAjC,CAA1B;AACA,WAAO,MAAMK,YAAY,CAACF,OAAD,CAAzB;AACD,GAHQ,EAGN,CAACJ,KAAD,EAAQC,KAAR,CAHM,CAAT;AAKA,SAAOC,cAAP;AACD,CATM;;IAAMH,W;;AAWb,OAAO,MAAMQ,iBAAiB,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAwB;AAAA;;AACrD;AACA;AAEA;AACA;AACA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC,CAACyB,OAAN,EAAe;AACbE,MAAAA,OAAO,CAACC,GAAR,CACEC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,MAApB,EACGC,MADH,CACUC,GAAG,IAAI,CAACA,GAAG,CAACC,QADtB,EAEGC,GAFH,CAEOF,GAAG,IAAI,IAAIP,OAAJ,CAAYU,OAAO,IAAI;AACjCH,QAAAA,GAAG,CAACI,MAAJ,GAAaJ,GAAG,CAACK,OAAJ,GAAcF,OAA3B;AACD,OAFW,CAFd,CADF,EAOGG,IAPH,CAOQ,MAAM;AACVT,QAAAA,QAAQ,CAACU,sBAAT,CAAgCf,SAAhC,EAA2C,CAA3C,EAA8CgB,SAA9C,GAA0DX,QAAQ,CAACU,sBAAT,CAAgCf,SAAhC,EAA2C,CAA3C,EAA8CiB,YAAxG;AACD,OATH;AAUD;AACF,GAbQ,EAaN,CAAClB,OAAD,EAAUC,SAAV,CAbM,CAAT;AAcD,CApBI;;IAAMF,iB","sourcesContent":[" import { useState, useEffect } from 'react';\n import { fb } from '../service';\n\n export const useAuth = () => {\n    const [authUser, setAuthUser] = useState();\n  \n    useEffect(() => {\n      const unsubscribe = fb.auth.onAuthStateChanged(user => {\n        if (user) {\n          setAuthUser(user);\n        } else {\n          setAuthUser(null);\n        }\n      });\n      return unsubscribe;\n    }, []);\n  \n    return {\n      authUser,\n    };\n  };\n\nexport const useResolved = (...vals) => {\n    const [resolved, setResolved] = useState(false);\n\n    useEffect(() => {\n        setResolved(vals.every(v => v !== undefined));\n    }, [vals]);\n\n    // if every value is not resolved return true\n    return resolved;\n    };\n\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedValue(value), delay);\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport const useScrollToBottom = (trigger, className) => {\n    // Scrolls to the bottom of a container with a \n    // given className when active is flipped to true\n  \n    // Because we are dealing with images as well, we need to wait\n    // until the images have loaded fully before doing the scroll.\n    useEffect(() => {\n      if (!!trigger) {\n        Promise.all(\n          Array.from(document.images)\n            .filter(img => !img.complete)\n            .map(img => new Promise(resolve => {\n              img.onload = img.onerror = resolve;\n            }))\n        )\n          .then(() => {\n            document.getElementsByClassName(className)[0].scrollTop = document.getElementsByClassName(className)[0].scrollHeight;\n          });\n      }\n    }, [trigger, className]);\n  };\n"]},"metadata":{},"sourceType":"module"}