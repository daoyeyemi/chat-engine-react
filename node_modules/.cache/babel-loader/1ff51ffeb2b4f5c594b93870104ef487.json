{"ast":null,"code":"var _jsxFileName = \"/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/ChatInput/index.js\",\n    _s = $RefreshSig$();\n\nimport { useChat } from 'context';\nimport { useState, useRef } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport { ImageUpload } from 'components/ImageUpload';\nimport { sendMessage } from 'react-chat-engine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChatInput = () => {\n  _s();\n\n  const {\n    chatConfig,\n    selectedChat\n  } = useChat();\n  const [chatInputText, setChatInputText] = useState('');\n  const [imageModalOpen, setImageModalOpen] = useState(false);\n  const inputRef = useRef(null);\n  const [image, setImage] = useState();\n\n  const sendChatMessage = () => {\n    if (selectedChat && chatInputText) {\n      setChatInputText('');\n      sendMessage(chatConfig, selectedChat.id, {\n        text: chatInputText,\n        files: []\n      });\n    }\n  };\n\n  const onFileAttach = file => {\n    setImage(file);\n    setImageModalOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          const input = inputRef.current;\n\n          if (input) {\n            input.value = '';\n            input.click();\n          }\n        },\n        className: \"attachment-icon\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"attach\",\n          color: \"grey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: chatInputText,\n        className: \"chat-input\",\n        placeholder: \"Send a message\",\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            sendChatMessage();\n          }\n        },\n        onChange: e => setChatInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: sendChatMessage,\n        className: \"send-message-icon\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"send\",\n          color: \"grey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: inputRef,\n      className: \"file-input\",\n      accept: \"image/jpeg,image/png\",\n      onChange: e => {\n        var _e$target, _e$target$files;\n\n        const file = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$files = _e$target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n\n        if (file) {\n          onFileAttach(file);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), imageModalOpen && !!image && /*#__PURE__*/_jsxDEV(ImageUpload, {\n      file: image,\n      mode: \"message\",\n      onSubmit: () => {\n        sendMessage(chatConfig, selectedChat.id, {\n          text: chatInputText,\n          files: [image]\n        }, () => {\n          setImage(null);\n          setChatInputText('');\n        });\n      },\n      close: () => setImageModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatInput, \"hwiF28UuxtGJ56GuLK5xxXdVbF4=\", false, function () {\n  return [useChat];\n});\n\n_c = ChatInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"sources":["/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/ChatInput/index.js"],"names":["useChat","useState","useRef","Icon","ImageUpload","sendMessage","ChatInput","chatConfig","selectedChat","chatInputText","setChatInputText","imageModalOpen","setImageModalOpen","inputRef","image","setImage","sendChatMessage","id","text","files","onFileAttach","file","input","current","value","click","e","key","target"],"mappings":"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","sourcesContent":["import { useChat } from 'context';\nimport { useState, useRef } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport { ImageUpload } from 'components/ImageUpload';\nimport { sendMessage } from 'react-chat-engine';\n\nexport const ChatInput = () => {\n  const { chatConfig, selectedChat } = useChat();\n  const [chatInputText, setChatInputText] = useState('');\n  const [imageModalOpen, setImageModalOpen] = useState(false);\n\n  const inputRef = useRef(null);\n  const [image, setImage] = useState();\n\n  const sendChatMessage = () => {\n    if (selectedChat && chatInputText) {\n      setChatInputText('');\n      sendMessage(chatConfig, selectedChat.id, {\n        text: chatInputText,\n        files: [],\n      });\n    }\n  };\n\n  const onFileAttach = file => {\n    setImage(file);\n    setImageModalOpen(true);\n  };\n\n  return (\n    <>\n      <div className=\"chat-controls\">\n        <div\n          onClick={() => {\n            const input = inputRef.current;\n            if (input) {\n              input.value = '';\n              input.click();\n            }\n          }}\n          className=\"attachment-icon\"\n        >\n          <Icon name=\"attach\" color=\"grey\" />\n        </div>\n        <input\n          value={chatInputText}\n          className=\"chat-input\"\n          placeholder=\"Send a message\"\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              sendChatMessage();\n            }\n          }}\n          onChange={e => setChatInputText(e.target.value)}\n        />\n        <div onClick={sendChatMessage} className=\"send-message-icon\">\n          <Icon name=\"send\" color=\"grey\" />\n        </div>\n      </div>\n\n      <input\n        type=\"file\"\n        ref={inputRef}\n        className=\"file-input\"\n        accept=\"image/jpeg,image/png\"\n        onChange={e => {\n          const file = e.target?.files?.[0];\n          if (file) {\n            onFileAttach(file);\n          }\n        }}\n      />\n\n      {imageModalOpen && !!image && (\n        <ImageUpload\n          file={image}\n          mode=\"message\"\n          onSubmit={() => {\n            sendMessage(\n              chatConfig,\n              selectedChat.id,\n              {\n                text: chatInputText,\n                files: [image],\n              },\n              () => {\n                setImage(null);\n                setChatInputText('');\n              },\n            );\n          }}\n          close={() => setImageModalOpen(false)}\n        />\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}