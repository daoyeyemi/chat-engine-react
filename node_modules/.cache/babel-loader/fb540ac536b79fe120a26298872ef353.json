{"ast":null,"code":"var _jsxFileName = \"/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/ChatList/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useChat } from 'context';\nimport { ChatAvatar } from 'components/ChatAvatar';\nimport { Icon } from 'semantic-ui-react';\nimport { joinUsernames, notMe } from 'helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChatList = () => {\n  _s();\n\n  const {\n    myChats,\n    chatConfig,\n    selectedChat,\n    selectChatClick,\n    deleteChatClick\n  } = useChat();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-list\",\n    children: myChats.map((c, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-list-item ${(selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id) === c.id ? 'selected-chat-item' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => selectChatClick(c),\n        className: \"chat-list-item-content\",\n        children: c.people.length === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            circular: true,\n            inverted: true,\n            color: \"violet\",\n            name: \"user cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-list-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-username\",\n              children: \"No One Added Yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : c.people.length === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ChatAvatar, {\n            username: notMe(chatConfig, c),\n            chat: c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-list-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-username\",\n              children: notMe(chatConfig, c)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-message\",\n              children: c.last_message.attachments.length ? `${c.last_message.sender.username} sent an attachment` : c.last_message.text.slice(0, 50) + '...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            circular: true,\n            inverted: true,\n            color: \"brown\",\n            name: \"users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-list-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-username\",\n              children: [joinUsernames(c.people, chatConfig.userName).slice(0, 50), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-message\",\n              children: c.last_message.attachments.length ? `${c.last_message.sender.username} sent an attachment` : c.last_message.text.slice(0, 50) + '...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => deleteChatClick(c),\n        className: \"chat-item-delete\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatList, \"76vtSKrQovR17Uq+mF+0baL5C9k=\", false, function () {\n  return [useChat];\n});\n\n_c = ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/ChatList/index.js"],"names":["React","useChat","ChatAvatar","Icon","joinUsernames","notMe","ChatList","myChats","chatConfig","selectedChat","selectChatClick","deleteChatClick","map","c","index","id","people","length","last_message","attachments","sender","username","text","slice","userName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useChat } from 'context';\nimport { ChatAvatar } from 'components/ChatAvatar';\nimport { Icon } from 'semantic-ui-react';\nimport { joinUsernames, notMe } from 'helpers';\n\nexport const ChatList = () => {\n  const {\n    myChats,\n    chatConfig,\n    selectedChat,\n    selectChatClick,\n    deleteChatClick,\n  } = useChat();\n\n  return (\n    <div className=\"chat-list\">\n      {myChats.map((c, index) => (\n        <div\n          className={`chat-list-item ${\n            selectedChat?.id === c.id ? 'selected-chat-item' : ''\n          }`}\n          key={index}\n        >\n          <div\n            onClick={() => selectChatClick(c)}\n            className=\"chat-list-item-content\"\n          >\n            {c.people.length === 1 ? (\n              <>\n                <Icon circular inverted color=\"violet\" name=\"user cancel\" />\n                <div className=\"chat-list-preview\">\n                  <div className=\"preview-username\">No One Added Yet</div>\n                </div>\n              </>\n            ) : c.people.length === 2 ? (\n              <>\n                <ChatAvatar username={notMe(chatConfig, c)} chat={c} />\n\n                <div className=\"chat-list-preview\">\n                  <div className=\"preview-username\">{notMe(chatConfig, c)}</div>\n                  <div className=\"preview-message\">\n                    {c.last_message.attachments.length\n                      ? `${c.last_message.sender.username} sent an attachment`\n                      : c.last_message.text.slice(0, 50) + '...'}\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <Icon circular inverted color=\"brown\" name=\"users\" />\n                <div className=\"chat-list-preview\">\n                  <div className=\"preview-username\">\n                    {joinUsernames(c.people, chatConfig.userName).slice(0, 50)}\n                    ...\n                  </div>\n                  <div className=\"preview-message\">\n                    {c.last_message.attachments.length\n                      ? `${c.last_message.sender.username} sent an attachment`\n                      : c.last_message.text.slice(0, 50) + '...'}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n\n          <div onClick={() => deleteChatClick(c)} className=\"chat-item-delete\">\n            <Icon name=\"delete\" />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}