{"ast":null,"code":"var _jsxFileName = \"/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport { fb } from 'service';\nimport { useState } from 'react';\nimport { Form, Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { FormField } from 'components/FormField';\nimport { validationSchema, defaultValues } from './formikConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const history = useHistory();\n  const [serverError, setServerError] = useState('');\n\n  const login = ({\n    email,\n    password\n  }, {\n    setSubmitting\n  }) => {\n    fb.auth.signInWithEmailAndPassword(email, password).then(res => {\n      if (!res.user) {\n        setServerError(\"We're having trouble logging you in. Please try again.\");\n      }\n    }).catch(err => {\n      if (err.code === 'auth/wrong-password') {\n        setServerError('Invalid credentials');\n      } else if (err.code === 'auth/user-not-found') {\n        setServerError('No account for this email');\n      } else {\n        setServerError('Something went wrong :(');\n      }\n    }).finally(() => setSubmitting(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      style: {\n        marginTop: \"25px\"\n      },\n      children: \"let us chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        onSubmit: login,\n        validateOnMount: true,\n        initialValues: defaultValues,\n        validationSchema: validationSchema,\n        children: ({\n          isValid,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormField, {\n            name: \"email\",\n            label: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            name: \"password\",\n            label: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-link-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-link\",\n              onClick: () => history.push('signup'),\n              children: \"don't have an account yet? sign up here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"#B22222\"\n            },\n            className: \"btn btn-warning\",\n            type: \"submit\",\n            disabled: !isValid || isSubmitting,\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: serverError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"gImVZM9eszjceQm/ycQBpQtwQPM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/daoyeyemi/Desktop/portfolioprojects/react-letuschat/src/components/Login/index.js"],"names":["fb","useState","Form","Formik","useHistory","FormField","validationSchema","defaultValues","Login","history","serverError","setServerError","login","email","password","setSubmitting","auth","signInWithEmailAndPassword","then","res","user","catch","err","code","finally","marginTop","isValid","isSubmitting","push","backgroundColor"],"mappings":"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","sourcesContent":["import { fb } from 'service';\nimport { useState } from 'react';\nimport { Form, Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { FormField } from 'components/FormField';\nimport { validationSchema, defaultValues } from './formikConfig';\n\nexport const Login = () => {\n  const history = useHistory();\n  const [serverError, setServerError] = useState('');\n\n  const login = ({ email, password }, { setSubmitting }) => {\n    fb.auth\n      .signInWithEmailAndPassword(email, password)\n      .then(res => {\n        if (!res.user) {\n          setServerError(\n            \"We're having trouble logging you in. Please try again.\",\n          );\n        }\n      })\n      .catch(err => {\n        if (err.code === 'auth/wrong-password') {\n          setServerError('Invalid credentials');\n        } else if (err.code === 'auth/user-not-found') {\n          setServerError('No account for this email');\n        } else {\n          setServerError('Something went wrong :(');\n        }\n      })\n      .finally(() => setSubmitting(false));\n  };\n\n  return (\n    <div>\n      <div className=\"title\" style={{ marginTop: \"25px\"}}>let us chat</div>\n    <div className=\"auth-form\">\n      <h1>login</h1>\n      <Formik\n        onSubmit={login}\n        validateOnMount={true}\n        initialValues={defaultValues}\n        validationSchema={validationSchema}\n      >\n        {({ isValid, isSubmitting }) => (\n          <Form>\n            <FormField name=\"email\" label=\"email\" type=\"email\" />\n            <FormField name=\"password\" label=\"password\" type=\"password\" />\n\n            <div className=\"auth-link-container\">\n              <span\n                className=\"auth-link\"\n                onClick={() => history.push('signup')}\n              >\n               don't have an account yet? sign up here \n              </span>\n            </div>\n\n            <button style={{backgroundColor: \"#B22222\"}} className=\"btn btn-warning\" type=\"submit\" disabled={!isValid || isSubmitting}>\n              login\n            </button>\n          </Form>\n        )}\n      </Formik>\n\n      {serverError && <div className=\"error\">{serverError}</div>}\n    </div>\n    </div>\n  \n  );\n};\n"]},"metadata":{},"sourceType":"module"}